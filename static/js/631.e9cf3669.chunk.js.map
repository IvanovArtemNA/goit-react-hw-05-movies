{"version":3,"file":"static/js/631.e9cf3669.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,sCAAyCC,IADpC,cACnBE,EADmB,yBAGlBA,EAAMC,MAHY,2CAAH,qDAMXC,EAAW,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,EAAAA,IAAA,gCACMC,EADN,iCACsCK,EADtC,gCADI,cACnBC,EADmB,yBAKlBA,EAAOH,MALW,2CAAH,sDAQXI,EAAY,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACVS,EADU,oBACIR,EADJ,oBADI,cACpBS,EADoB,yBAKnBA,EAAQN,MALW,2CAAH,sDAQZO,EAAY,mCAAG,WAAMF,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACVS,EADU,4BACYR,EADZ,oBADI,cACpBW,EADoB,yBAKnBA,EAAQR,MALW,2CAAH,sDAQZS,EAAY,mCAAG,WAAMJ,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACVS,EADU,4BACYR,EADZ,2BADI,cACpBa,EADoB,yBAKnBA,EAAQV,MALW,2CAAH,qD,mJChCZW,EAAQC,EAAAA,GAAAA,IAAH,qGAQLC,EAAOD,EAAAA,GAAAA,IAAH,0CAIJE,EAAcF,EAAAA,GAAAA,IAAH,sBAEXG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,2LAYLK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,gJAURO,EAAOP,EAAAA,GAAAA,GAAH,+CAIJQ,EAAOR,EAAAA,GAAAA,GAAH,6C,SCkCjB,EA9DqB,WAAO,IAAD,IACzB,GAA8BS,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOf,EAAP,KAAgBgB,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAamB,GACVO,MAAK,SAAAxB,GACJgB,EAAWhB,GACX,IAAMmB,EAAY,GAClBnB,EAAQyB,OAAOC,SAAQ,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAUS,KAAKD,EAA7B,IACvBP,EAAaD,EACd,IACAU,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EACpB,GACJ,GAAE,CAACb,IAEJ,IAAMgB,EAAc,IAAIC,KAAKlC,EAAQmC,cAC/BC,EAAI,oBAAGf,EAASgB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC,OACE,4BACE,SAAC3B,EAAD,CAAU4B,GAAIH,EAAd,sBACA,UAAC7B,EAAD,YACE,SAACF,EAAD,CACEmC,IAAG,UA7BU,mCA6BV,OAAsBxC,EAAQyC,aACjCC,IAAK1C,EAAQ2C,MACbC,MAAM,SAER,UAACpC,EAAD,YACE,0BACGR,EAAQ2C,MADX,KACoBV,EAAYY,cADhC,QAGA,wCAAgB7C,EAAQ8C,WAAxB,QACA,sCACA,uBAAI9C,EAAQ+C,YACZ,oCACA,uBAAI5B,EAAU6B,KAAK,eAGvB,UAACnC,EAAD,YACE,mDACA,SAACC,EAAD,WACE,SAACL,EAAD,CAAO8B,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAAhC,qBAIF,SAACtB,EAAD,WACE,SAACL,EAAD,CAAO8B,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAnC,2BAKJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,yDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '283966c6ecdf87ab9325b929855602b9';\n\nexport const getTrending = async () => {\n  const trend = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n  return trend.data;\n};\n\nexport const searchMovie = async query => {\n  const search = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return search.data;\n};\n\nexport const detalisMovie = async id => {\n  const detalis = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return detalis.data;\n};\n\nexport const creditsMovie = async id => {\n  const credits = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return credits.data;\n};\n\nexport const reviewsMovie = async id => {\n  const reviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return reviews.data;\n};\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n  margin: 20px;\n\n  border-radius: 2px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n`;\n\nexport const Information = styled.div``;\n\nexport const Links = styled(Link)`\n  max-width: 100px;\n  padding: 10px 20px;\n\n  text-align: center;\n  text-decoration: none;\n  font-weight: 700;\n\n  color: white;\n  background-color: green;\n`;\n\nexport const NavLinks = styled(NavLink)`\n  padding: 10px 20px;\n  margin-left: 20px;\n\n  text-decoration: none;\n\n  color: white;\n  background-color: green;\n`;\n\nexport const List = styled.ul`\n  padding-left: 40px;\n`;\n\nexport const Item = styled.li`\n  margin-top: 30px;\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { detalisMovie } from 'API';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  Image,\n  Information,\n  Card,\n  Links,\n  List,\n  Item,\n  NavLinks,\n} from './MovieDetails.styled';\n\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const [detalis, setDetalis] = useState({});\n  const { movieId } = useParams();\n  const [genreList, setGenreList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    detalisMovie(movieId)\n      .then(detalis => {\n        setDetalis(detalis);\n        const genreList = [];\n        detalis.genres.forEach(({ name }) => genreList.push(name));\n        setGenreList(genreList);\n      })\n      .catch(error => {\n        return console.log(error);\n      });\n  }, [movieId]);\n\n  const releaseYear = new Date(detalis.release_date);\n  const back = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <NavLinks to={back}>Go back</NavLinks>\n      <Card>\n        <Image\n          src={`${BASE_IMAGE_URL}${detalis.poster_path}`}\n          alt={detalis.title}\n          width=\"300\"\n        />\n        <Information>\n          <h2>\n            {detalis.title} ({releaseYear.getFullYear()})\n          </h2>\n          <p>User score: {detalis.vote_count} </p>\n          <h3>Overview</h3>\n          <p>{detalis.overview}</p>\n          <h4>Genres</h4>\n          <p>{genreList.join(', ')}</p>\n        </Information>\n      </Card>\n      <List>\n        <p>Additional information</p>\n        <Item>\n          <Links to=\"cast\" state={{ from: back }}>\n            Cast\n          </Links>\n        </Item>\n        <Item>\n          <Links to=\"reviews\" state={{ from: back }}>\n            Reviews\n          </Links>\n        </Item>\n      </List>\n      <Suspense fallback={<h1>Movie Details to be appeared</h1>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrending","trend","data","searchMovie","query","search","detalisMovie","id","detalis","creditsMovie","credits","reviewsMovie","reviews","Image","styled","Card","Information","Links","Link","NavLinks","NavLink","List","Item","useState","setDetalis","movieId","useParams","genreList","setGenreList","location","useLocation","useEffect","then","genres","forEach","name","push","catch","error","console","log","releaseYear","Date","release_date","back","state","from","to","src","poster_path","alt","title","width","getFullYear","vote_count","overview","join","Suspense","fallback"],"sourceRoot":""}